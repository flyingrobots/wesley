#!/usr/bin/env node
/**
 * SHA-lock HOLMES CLI - Sidecar intelligence for Wesley
 */

import { readFileSync } from 'node:fs';
import { Holmes } from './Holmes.mjs';
import { Watson } from './Watson.mjs';
import { Moriarty } from './Moriarty.mjs';

const command = process.argv[2];

function loadBundle() {
  try {
    return JSON.parse(readFileSync('.wesley/bundle.json', 'utf8'));
  } catch (error) {
    console.error('❌ No Wesley bundle found. Run "wesley generate --emit-bundle" first.');
    process.exit(1);
  }
}

function loadHistory() {
  try {
    return JSON.parse(readFileSync('.wesley/history.json', 'utf8'));
  } catch {
    return { points: [] };
  }
}

async function main() {
  switch (command) {
    case 'investigate': {
      const bundle = loadBundle();
      const holmes = new Holmes(bundle);
      console.log(holmes.investigate());
      break;
    }
    
    case 'verify': {
      const bundle = loadBundle();
      const watson = new Watson(bundle);
      console.log(watson.verify());
      break;
    }
    
    case 'predict': {
      const history = loadHistory();
      const moriarty = new Moriarty(history);
      console.log(moriarty.predict());
      break;
    }
    
    case 'report': {
      // Combined report
      const bundle = loadBundle();
      const history = loadHistory();
      
      console.log('# 🔍 The Case of Schema Investigation\n');
      
      const holmes = new Holmes(bundle);
      console.log(holmes.investigate());
      console.log('\n---\n');
      
      const watson = new Watson(bundle);
      console.log(watson.verify());
      console.log('\n---\n');
      
      const moriarty = new Moriarty(history);
      console.log(moriarty.predict());
      
      break;
    }
    
    default:
      console.log(`
SHA-lock HOLMES - Wesley Schema Intelligence

Usage:
  holmes investigate    Run HOLMES investigation on .wesley/bundle
  holmes verify        Run WATSON verification
  holmes predict       Run MORIARTY predictions
  holmes report        Generate complete report (all three)

Requires:
  .wesley/bundle.json   Generated by: wesley generate --emit-bundle
  .wesley/history.json  Built over time by multiple generations

"When you have eliminated the impossible, whatever remains,
 however improbable, must be the deployable."
      `);
  }
}

main().catch(error => {
  console.error('💥 Investigation failed:', error.message);
  process.exit(1);
});