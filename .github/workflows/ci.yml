name: CI
on: [push, pull_request]

jobs:
  build-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: wesley
        ports: ['5432:5432']
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 5s
          --health-timeout 5s
          --health-retries 20
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: pnpm/action-setup@v4
        with: { version: 9 }
      - uses: actions/setup-node@v4
        with: { node-version: 20, cache: 'pnpm' }
      - run: pnpm install

      # Install Bats for CLI tests executed in this workflow
      - name: Install Bats (Ubuntu)
        run: |
          curl -LO https://github.com/bats-core/bats-core/archive/v1.12.0.tar.gz
          tar -xzf v1.12.0.tar.gz
          sudo ./bats-core-1.12.0/install.sh /usr/local
          echo "/usr/local/bin" >> $GITHUB_PATH

      # Spin local PG via docker-compose init scripts (extensions)
      - run: psql -h localhost -U postgres -c "select 1" || true
        env: { PGPASSWORD: postgres }
      - run: psql -h localhost -U postgres -f docker-entrypoint-initdb.d/00-extensions.sql
        env: { PGPASSWORD: postgres }

      - run: pnpm -w test

      # CLI bats are covered by dedicated workflows; keep main CI lean
      # (See .github/workflows/cli-tests.yml and cli-quick.yml)

      - run: node packages/wesley-host-node/bin/wesley.mjs generate --schema example/ecommerce.graphql --emit-bundle
      - run: node packages/wesley-host-node/bin/wesley.mjs validate-bundle --bundle example/.wesley --schemas schemas

      - run: node packages/wesley-holmes/src/cli.mjs investigate > holmes.md
      - run: node packages/wesley-holmes/src/cli.mjs verify holmes.md > watson.md  
      - run: node packages/wesley-holmes/src/cli.mjs predict --from example/.wesley/scores.json > moriarty.md

      - name: Gate on metrics
        run: |
          node -e '
            const s=require("fs").readFileSync("example/.wesley/scores.json","utf8"); 
            const {scores}=JSON.parse(s);
            const ok = scores.scs>=0.8 && scores.tci>=0.7 && scores.mri<=0.4;
            if(!ok){console.error(scores); process.exit(1)}'
