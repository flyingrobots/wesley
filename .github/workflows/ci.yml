name: CI
on: [push, pull_request]

jobs:
  build-test:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: wesley
        ports: ['5432:5432']
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 5s
          --health-timeout 5s
          --health-retries 20
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: recursive
      - uses: pnpm/action-setup@v4
      - name: Verify pnpm version
        run: |
          echo "pnpm: $(pnpm --version)"
          node -v
      - uses: actions/setup-node@v4
        with: { node-version: 20, cache: 'pnpm' }
      - run: pnpm install --frozen-lockfile
      - name: Verify lockfile unchanged
        run: git diff --exit-code -- pnpm-lock.yaml

      # Install Bats for CLI tests executed in this workflow
      - name: Install Bats
        uses: ./.github/actions/install-bats

      # Spin local PG via docker-compose init scripts (extensions)
      - run: psql -h localhost -U postgres -c "select 1" || true
        env: { PGPASSWORD: postgres }
      - run: psql -h localhost -U postgres -f test/fixtures/postgres/00-extensions.sql
        env: { PGPASSWORD: postgres }

      - run: pnpm -w test

      # CLI bats are covered by dedicated workflows; keep main CI lean
      # (See .github/workflows/cli-tests.yml and cli-quick.yml)

      - run: node packages/wesley-host-node/bin/wesley.mjs generate --schema test/fixtures/examples/ecommerce.graphql --allow-dirty

      - name: Detect changes for repo Bats tests (no servers)
        id: changelog
        env:
          EVENT: ${{ github.event_name }}
          BASE_REF: ${{ github.event.pull_request.base.sha }}
          BEFORE: ${{ github.event.before }}
          SHA: ${{ github.sha }}
        run: |
          set -euo pipefail
          RANGE="${BEFORE}..${SHA}"
          if [ "$EVENT" = "pull_request" ] && [ -n "${BASE_REF}" ]; then
            RANGE="${BASE_REF}..${SHA}"
          fi
          echo "Diff range: $RANGE"
          CHANGED=$(git diff --name-only "$RANGE" || true)
          echo "$CHANGED" | sed 's/^/ - /'
          NEED=false
          # Trigger only on unit/serverless tests; exclude browser-contracts and serve-static e2e
          echo "$CHANGED" | grep -E -q '^(scripts/serve-static\.mjs|test/serve-static-(unit|relative-unit)\.bats|scripts/compute-progress\.mjs|test/progress-|test/ci-|test/deno-host-webcrypto-guard\.bats)' && NEED=true || true
          echo "RUN_BATS=$NEED" >> $GITHUB_ENV

      - name: Repo Bats tests (unit/progress/ci checks only)
        if: ${{ env.RUN_BATS == 'true' }}
        env:
          BATS_LIB_PATH: packages/wesley-cli/test
        run: |
          # Ensure tests that use `load 'bats-plugins/â€¦'` from the repo-level
          # `test/` directory can resolve plugins.
          timeout 2m bash scripts/setup-bats-plugins.sh
          rm -rf test/bats-plugins || true
          ln -sfn "$PWD/packages/wesley-cli/test/bats-plugins" test/bats-plugins
          timeout 10m bats \
            test/serve-static-unit.bats \
            test/serve-static-relative-unit.bats \
            test/progress-*.bats \
            test/ci-*.bats \
            test/deno-host-webcrypto-guard.bats
