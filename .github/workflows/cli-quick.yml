name: Wesley CLI Quick Check

# Fast feedback workflow for CLI-only changes
# Runs on every push to CLI package with minimal matrix

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

env:
  FORCE_COLOR: 1

jobs:
  quick-cli-test:
    name: Quick CLI Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive  # For Bats plugins

    - name: Detect CLI changes
      id: changes
      uses: dorny/paths-filter@v3
      with:
        filters: |
          cli:
            - 'packages/wesley-cli/**'

    - name: Skip check (no CLI changes)
      if: steps.changes.outputs.cli != 'true'
      run: |
        echo "No changes under packages/wesley-cli; skipping quick CLI tests."
        echo "::notice title=Quick Check Skipped::No CLI changes detected"

    - name: Setup pnpm
      if: steps.changes.outputs.cli == 'true'
      uses: pnpm/action-setup@v4
    - name: Verify pnpm version
      run: |
        echo "pnpm: $(pnpm --version)"
        node -v

    - name: Setup Node.js (LTS)
      if: steps.changes.outputs.cli == 'true'
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'pnpm'

    - name: Install Bats
      if: steps.changes.outputs.cli == 'true'
      run: |
        curl -LO https://github.com/bats-core/bats-core/archive/v1.12.0.tar.gz
        tar -xzf v1.12.0.tar.gz
        sudo ./bats-core-1.12.0/install.sh /usr/local
        echo "/usr/local/bin" >> $GITHUB_PATH

    - name: Install dependencies
      if: steps.changes.outputs.cli == 'true'
      run: |
        pnpm install --frozen-lockfile
    - name: Verify lockfile unchanged
      run: git diff --exit-code -- pnpm-lock.yaml

    - name: Initialize git for CLI tests
      if: steps.changes.outputs.cli == 'true'
      run: |
        cd packages/wesley-cli  
        git init .
        git config user.name "CI Test"
        git config user.email "test@ci.com"
        git add .
        git commit -m "CI test commit" || echo "Nothing to commit"

    - name: Run CLI tests
      if: steps.changes.outputs.cli == 'true'
      run: |
        cd packages/wesley-cli
        echo "ðŸ§ª Running Wesley CLI Tests..."
        pnpm test

    - name: Smoke test CLI functionality
      if: steps.changes.outputs.cli == 'true'
      run: |
        cd packages/wesley-cli
        echo ""
        echo "ðŸ”¥ Smoke testing CLI commands..."
        echo "Version check:"
        node ../wesley-host-node/bin/wesley.mjs --version
        echo ""
        echo "Help check:"  
        node ../wesley-host-node/bin/wesley.mjs --help | head -5
        echo ""
        echo "stdin support check:"
        echo 'type Query { hello: String }' | node ../wesley-host-node/bin/wesley.mjs generate --schema - --json --quiet || echo "âœ“ Expected parser failure" || true

    - name: Success notification
      if: steps.changes.outputs.cli == 'true'
      run: |
        echo "âœ… Wesley CLI quick check passed!"
        echo "All 12 end-to-end tests successful"
        echo "::notice title=Quick Check Passed::Wesley CLI ready for review"
